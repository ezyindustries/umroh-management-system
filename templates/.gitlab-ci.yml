stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  APP_NAME: "my-app"  # Change this for each project
  
before_script:
  - docker info

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building Docker image for $APP_NAME"
    - docker build -t $APP_NAME:$CI_COMMIT_SHA .
    - docker tag $APP_NAME:$CI_COMMIT_SHA $APP_NAME:latest
  only:
    - main
    - develop

deploy_staging:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Deploying $APP_NAME to staging environment"
    # Stop existing staging container if running
    - docker stop ${APP_NAME}-staging || true
    - docker rm ${APP_NAME}-staging || true
    # Run new staging container
    - |
      docker run -d \
        --name ${APP_NAME}-staging \
        --network platform-v2_platform-network \
        --label "traefik.enable=true" \
        --label "traefik.http.routers.${APP_NAME}-staging.rule=Host(\`dev-${APP_NAME}.ezyindustries.my.id\`)" \
        --label "traefik.http.routers.${APP_NAME}-staging.entrypoints=websecure" \
        --label "traefik.http.routers.${APP_NAME}-staging.tls.certresolver=letsencrypt" \
        --label "traefik.http.services.${APP_NAME}-staging.loadbalancer.server.port=3000" \
        -e NODE_ENV=staging \
        -e DATABASE_URL=postgresql://${APP_NAME}_staging_user:${STAGING_DB_PASSWORD}@postgres-platform:5432/${APP_NAME}_staging \
        $APP_NAME:$CI_COMMIT_SHA
    - echo "✅ Staging deployment completed: https://dev-${APP_NAME}.ezyindustries.my.id"
  environment:
    name: staging
    url: https://dev-${APP_NAME}.ezyindustries.my.id
  only:
    - develop
  tags:
    - docker

deploy_production:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Deploying $APP_NAME to production environment"
    # Stop existing production container if running
    - docker stop ${APP_NAME}-prod || true
    - docker rm ${APP_NAME}-prod || true
    # Run new production container
    - |
      docker run -d \
        --name ${APP_NAME}-prod \
        --network platform-v2_platform-network \
        --label "traefik.enable=true" \
        --label "traefik.http.routers.${APP_NAME}-prod.rule=Host(\`${APP_NAME}.ezyindustries.my.id\`)" \
        --label "traefik.http.routers.${APP_NAME}-prod.entrypoints=websecure" \
        --label "traefik.http.routers.${APP_NAME}-prod.tls.certresolver=letsencrypt" \
        --label "traefik.http.services.${APP_NAME}-prod.loadbalancer.server.port=3000" \
        -e NODE_ENV=production \
        -e DATABASE_URL=postgresql://${APP_NAME}_prod_user:${PROD_DB_PASSWORD}@postgres-platform:5432/${APP_NAME}_prod \
        $APP_NAME:$CI_COMMIT_SHA
    - echo "✅ Production deployment completed: https://${APP_NAME}.ezyindustries.my.id"
  environment:
    name: production
    url: https://${APP_NAME}.ezyindustries.my.id
  only:
    - main
  when: manual  # Require manual approval for production
  tags:
    - docker